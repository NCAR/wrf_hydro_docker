12/01/2023

Creating a Docker version of WRF-Hydro for testing geospatial configurations. 

If container is already built and compile-time options will not change, then 
skip ahead to Step 5.

1) Step 1: Clone the wrf_hydro_docker repository
	
	https://github.com/NCAR/wrf_hydro_docker
	
2) Setup the setEnvar script. 
	Make sure the compile-time options are correct for your intended run of WRF-Hydro. 
	
	You can get the current setEnvar script from here:
		https://github.com/NCAR/wrf_hydro_nwm_public/blob/main/src/template/setEnvar.sh
		
	Make sure the desired version and options in setEnvar.sh are in the repository /domaintesting/ directory.

3) Step 2: Build the docker container for the release branch
	
	Open Windows PowerShell in your base directory:

	Command:
		 > docker build -f .\Dockerfile -t wrfhydro/dev:domaintesting .

4) OPTIONAL: Copy files from the release that may need to be modified. You may do this the first time you 
   run this version of WRF-Hydro, so that you encorporate any new namelist or setEnvar.sh options.

	 Must first run the container so it exists:
		> docker ps -a
		
	Use the name of the relevant container in the following copy commands. Below are some files that 
	need to be updated (perhaps).
		
		docker cp reverent_ramanujan:/home/docker/wrf_hydro_nwm_public/trunk/NDHMS/template/HYDRO/hydro.namelist C:\Users\ksampson\Documents\GitHub\wrf_hydro_docker\dev\domaintesting\RUN
		docker cp reverent_ramanujan:/home/docker/wrf_hydro_nwm_public/trunk/NDHMS/template/NoahMP/namelist.hrldas C:\Users\ksampson\Documents\GitHub\wrf_hydro_docker\dev\domaintesting\RUN
		docker cp reverent_ramanujan:/home/docker/wrf_hydro_nwm_public/trunk/NDHMS/template/setEnvar.sh C:\Users\ksampson\Documents\GitHub\wrf_hydro_docker\dev\domaintesting\RUN
	
5) Copy entire Run directory from compiled WRF-Hydro code to local directory. Make sure the output directory does not yet exist:
		Note: Must run PowerShell in admin mode to copy wrf_hydro.exe
	
		> docker cp -L reverent_ramanujan:/home/docker/wrf_hydro_nwm_public/trunk/NDHMS/Run C:\Users\ksampson\Documents\GitHub\wrf_hydro_docker\dev\domaintesting\Run
		
6) Make any modifications you need to the namelists, particularly hydro.namelist and namelist.hrldas. Ensure encoding is 
   left at UTF8 and linux line endings are used.

	Create DOMAIN directory
		Default will be ./DOMAIN
		
	hydro.namelist:
		Comment-out restart file option with !:
			!RESTART_FILE
			
		Change restart file frequency to monthly:
			rst_dt = -99999
			
		Set groundwater to cold-start:
			GW_RESTART = 0
			
		Change the grid spacing of the routing grid (meters):
			DXRT = 250.0
			
		Change the regridding factor from the LSM grid:
			AGGFACTRT = 4
			
		Change the channel option if necessary:
			channel_option = 3
			
		Uncomment the reach-based parameter file if necessary:
			!route_link_f = "./DOMAIN/Route_Link.nc"
	
		Comment/Uncomment LAKEPARM file:
			route_lake_f = "./DOMAIN/LAKEPARM.nc"
			
		Comment out reservoir persistence file ?:
			!reservoir_parameter_file = "./DOMAIN/persistence_parm.nc"
	
	namelist.hrldas:
		Comment out restart filename:
			!RESTART_FILENAME_REQUESTED = "RESTART/RESTART.2011082600_DOMAIN1"
			
		Set idealized forcings:
			FORC_TYP = 4
		
7) Step 2: Run WRF-Hydro. We will mount our local Run directory as the WRF-Hydro Run directory and execute WRF-Hydro.

	Tested with a Windows PowerShell opened as Administrator.
	
	With volumes defined and local Run directory mounted

		Interactive:
			docker run -it -v C:\Users\ksampson\Documents\GitHub\wrf_hydro_docker\dev\domaintesting\Run:/home/docker/Run wrfhydro/dev:domaintesting
		
		Non-Interactive:
			> docker run -v C:\Users\ksampson\Documents\GitHub\wrf_hydro_docker\dev\domaintesting\Run:/home/docker/Run wrfhydro/dev:domaintesting mpiexec -n 4 /home/docker/Run/wrf_hydro_NoahMP.exe

		Working:
			> docker run --mount type=bind,source=C:\Users\ksampson\Documents\GitHub\wrf_hydro_docker\dev\domaintesting\Run,target=/home/docker/Run wrfhydro/dev:domaintesting sh -c "cd /home/docker/Run && mpiexec -n 4 /home/docker/Run/wrf_hydro_NoahMP.exe"
			
  Test with no lakes:
	docker run --memory 16GB --mount type=bind,source=C:\Users\ksampson\Documents\GitHub\wrf_hydro_docker\dev\domaintesting\Run_nolake,target=/home/docker/Run wrfhydro/dev:domaintesting sh -c "cd /home/docker/Run && mpiexec -n 4 /home/docker/Run/wrf_hydro_NoahMP.exe"

Other:
	Don't forget to create a wrfinput file!

		(wrfh_gis) C:\Users\ksampson\Documents\GitHub\wrf_hydro_docker\dev\domaintesting\Run\DOMAIN>python C:\Users\ksampson\Documents\GitHub\wrf_hydro_gis_preprocessor\wrfhydro_gis\Create_wrfinput_from_Geogrid.py -i geogrid.nc -m 8 -o wrfinput.nc
		Script initiated at Mon Dec  4 14:27:07 2023
		  Creating wrfinput file from geogrid file.
			Input geogrid file: C:\Users\ksampson\Documents\GitHub\wrf_hydro_docker\dev\domaintesting\Run\DOMAIN\geogrid.nc
			Output wrfinput file: C:\Users\ksampson\Documents\GitHub\wrf_hydro_docker\dev\domaintesting\Run\DOMAIN\wrfinput.nc
			Month selected (1=Januaray, 12=December): 8
			Replaced 3172 values in TMN with mean SOILTEMPT value (275.28350830078125).
			Performing topographic soil temperature adjustment.
			Replaced 33 values in ISLTYP with 8 because no dominant land class could be determined
		  Process completed in 1.18 seconds
  