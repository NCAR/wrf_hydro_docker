{
	"auto_complete":
	{
		"selected_items":
		[
		]
	},
	"buffers":
	[
		{
			"contents": "###################################\n# Author: Tony Castronova\n# Email:  acastronova@cuahsi.org\n# Date:  8.29.2017\n###################################\n\nFROM ubuntu:16.04\n\nMAINTAINER acastronova@cuahsi.org\nUSER root\n\n####################################\n########## ROOT USER  ##############\n####################################\nRUN apt-get update\nRUN apt-get install -yq --no-install-recommends \\\n    wget \\\n    bzip2 \\\n    ca-certificates \\\n    vim \\ \n    libhdf5-dev \\\n    gfortran \\\n    m4 \\\n    make\\ \n    libswitch-perl \\ \n    mpich \\\n    libopenmpi-dev \\ \n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n\n# install netcdf-C\nRUN wget ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4.4.1.1.tar.gz -P /tmp  \nRUN tar -xf /tmp/netcdf-4.4.1.1.tar.gz -C /tmp\nENV H5DIR=/usr/lib/x86_64-linux-gnu/hdf5/serial\nENV NCDIR=/usr/local\nRUN cd /tmp/netcdf-4.4.1.1 && CPPFLAGS=-I${H5DIR}/include LDFLAGS=-L${H5DIR}/lib ./configure --prefix=/usr/local\nRUN cd /tmp/netcdf-4.4.1.1 && make\nRUN cd /tmp/netcdf-4.4.1.1 && make install\n\n# install netcdf-Fortran\nRUN wget ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-fortran-4.4.4.tar.gz\nRUN tar -xf netcdf-fortran-4.4.4.tar.gz -C /tmp\nENV NFDIR=/usr/local\nENV LD_LIBRARY_PATH=${NCDIR}/lib\nRUN cd /tmp/netcdf-fortran-4.4.4/ && CPPFLAGS=-I${NCDIR}/include LDFLAGS=-L${NCDIR}/lib ./configure --prefix=${NFDIR}\nRUN cd /tmp/netcdf-fortran-4.4.4 && make\nRUN cd /tmp/netcdf-fortran-4.4.4 && make install\n\nRUN useradd -ms /bin/bash cuahsi\nRUN usermod -aG sudo cuahsi\n\n####################################\n########## CUAHSI USER #############\n####################################\nUSER cuahsi\nWORKDIR /home/cuahsi\n\n# Compile the NWM\nRUN wget http://public.cuahsi.org/nwm/wrf-hydro-nwm-1.2.tar.gz\nRUN tar -xf wrf-hydro-nwm-1.2.tar.gz\nENV NETCDF=/usr/local\nRUN cd wrf_hydro_nwm/trunk/NDHMS && ./configure 6 && ./compile_offline_NoahMP.sh\n\n",
			"settings":
			{
				"buffer_size": 1865,
				"line_ending": "Unix",
				"name": "###################################"
			}
		},
		{
			"contents": "########################\n###Joe Mills\n########################\n\nFROM ubuntu:16.04\n\nMAINTAINER jmills@ucar.edu\nUSER root\n\n",
			"file": "/Users/jmills/Documents/dockerFiles/pgDocker",
			"file_size": 62,
			"file_write_time": 131498886690000000,
			"settings":
			{
				"buffer_size": 121,
				"encoding": "UTF-8",
				"line_ending": "Unix",
				"name": "########################"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 375.0,
		"last_filter": "Package Control: ",
		"selected_items":
		[
			[
				"Package Control: ",
				"Package Control: Enable Package"
			]
		],
		"width": 410.0
	},
	"console":
	{
		"height": 157.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
	],
	"find":
	{
		"height": 0.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1865,
						"regions":
						{
						},
						"selection":
						[
							[
								213,
								170
							]
						],
						"settings":
						{
							"auto_name": "###################################",
							"syntax": "Packages/Dockerfile Syntax Highlighting/Syntaxes/Dockerfile.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "/Users/jmills/Documents/dockerFiles/pgDocker",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 121,
						"regions":
						{
						},
						"selection":
						[
							[
								121,
								120
							]
						],
						"settings":
						{
							"auto_name": "########################",
							"syntax": "Packages/Dockerfile Syntax Highlighting/Syntaxes/Dockerfile.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 0.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "cuahsi_201710_docker.sublime-project",
	"replace":
	{
		"height": 0.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 150.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
